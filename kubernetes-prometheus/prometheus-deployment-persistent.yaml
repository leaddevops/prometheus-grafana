apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      securityContext: # giving permissions for the pod to access hostpath of pv by running as root
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--storage.tsdb.retention.time=6h" # timeframe prometheus need to keep the data
            - "--config.file=/etc/prometheus/prometheus.yml" ## config file path of prometheus server 
            - "--storage.tsdb.path=/prometheus/" # path where prometheus pod data is stored within the pod
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume # this volume holds the config file of prometheus via config map
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume # this volume helps prometheus data to be persisted even after a pod restarts
              mountPath: /prometheus/
      nodeSelector:
          kubernetes.io/hostname: worker1 # we are restricting the pod to spin only on worker1 due to hostpath pv which we created for data persistence. In production setup usually storage classes other than manual and dynamic provision is used
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          persistentVolumeClaim:
           claimName: prom-storage-pvc
